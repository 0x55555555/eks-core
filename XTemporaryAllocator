#ifndef XTEMPORARYALLOCATOR_H
#define XTEMPORARYALLOCATOR_H

#include "XAllocatorBase"

namespace Eks
{

class EKSCORE_EXPORT TemporaryAllocatorCore
  {
public:
  TemporaryAllocatorCore(AllocatorBase *allocator, xsize blockSize);
  ~TemporaryAllocatorCore();

  struct Block
    {
    void *alloc(xsize s, xsize alignment);

    Block *next;
    xuint8 *end;
    xuint8 *current;
    xuint8 data[1];
    };

  Block *findBlock();
  void releaseBlock(Block *);

private:

  Block *createBlock();

  Block *_freeBlock;
  xsize _blockSize;
  AllocatorBase *_allocator;
  };

class EKSCORE_EXPORT TemporaryAllocator : public AllocatorBase
  {
public:
  TemporaryAllocator(TemporaryAllocatorCore *core);
  ~TemporaryAllocator();

  void *alloc(xsize size, xsize alignment) X_OVERRIDE;
  void free(void *mem) X_OVERRIDE;

private:
  TemporaryAllocatorCore *_core;

  TemporaryAllocatorCore::Block *_current;

  TemporaryAllocatorCore::Block *_used;
  xsize _allocationCount;
  };

}

#endif // XTEMPORARYALLOCATOR_H
